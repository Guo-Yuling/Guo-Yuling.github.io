<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaSE</title>
      <link href="/2025/03/24/JavaSE/"/>
      <url>/2025/03/24/JavaSE/</url>
      
        <content type="html"><![CDATA[<p>title: API<br>date: 2025-3-24 20:23:44<br>tags:</p><ul><li>Hexo<br>categories: Hexo</li></ul><h1 id="常见API"><a href="#常见API" class="headerlink" title="常见API"></a>常见API</h1><h2 id="1-Math"><a href="#1-Math" class="headerlink" title="1.Math"></a>1.Math</h2><p>注意：方法都是静态的。</p><img src="/2025/03/24/JavaSE/image-20250218224144107.png" class="" title="image-20250218224144107"><p>​      sqrt  返回a的平方根</p><p>​      cbrt 返回a的立方根</p><p>练习一：判断一个数是否为一个质数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Math1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(isPrime(<span class="number">997</span>));</span><br><span class="line">        <span class="comment">//判断一个数是否为质数</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isPrime</span><span class="params">(<span class="type">int</span> number)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt; Math.sqrt(number); i++) &#123;</span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">if</span> (number % i == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(count);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>练习二</p><img src="/2025/03/24/JavaSE/image-20250218232919677.png" class="" title="image-20250218232919677"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Math2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//要求1:统计水仙花数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="comment">//三位数100-999</span></span><br><span class="line">        <span class="comment">//845</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">100</span>; i &lt;= <span class="number">999</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">ge</span> <span class="operator">=</span> i%<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">shi</span> <span class="operator">=</span>i/<span class="number">10</span> %<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">bai</span> <span class="operator">=</span>i/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">            <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span>Math.pow(ge,<span class="number">3</span>)+Math.pow(shi,<span class="number">3</span>)+Math.pow(bai,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (sum == i)&#123;</span><br><span class="line"><span class="comment">//                System.out.println(i);</span></span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(count);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">count1</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="comment">//要求2：证明没有两位的自幂数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>; i &lt;= <span class="number">99</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">ge</span> <span class="operator">=</span> i%<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">shi</span> <span class="operator">=</span>i/<span class="number">10</span> %<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">            <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span>Math.pow(ge,<span class="number">2</span>)+Math.pow(shi,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (sum == i)&#123;</span><br><span class="line"><span class="comment">//                System.out.println(i);</span></span><br><span class="line">                count1++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(count1);</span><br><span class="line">        <span class="type">int</span> <span class="variable">count2</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="comment">//要求3：四叶玫瑰数和五角星数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1000</span>; i &lt;= <span class="number">9999</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">ge</span> <span class="operator">=</span> i%<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">shi</span> <span class="operator">=</span>i/<span class="number">10</span> %<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">bai</span> <span class="operator">=</span>i/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">qian</span> <span class="operator">=</span> i/<span class="number">1000</span>%<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span>Math.pow(ge,<span class="number">4</span>)+Math.pow(shi,<span class="number">4</span>)+Math.pow(bai,<span class="number">4</span>)+Math.pow(qian,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (sum == i)&#123;</span><br><span class="line">                System.out.println(i);</span><br><span class="line">                count2++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(count2);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">count3</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="comment">//要求3：四叶玫瑰数和五角星数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10000</span>; i &lt;= <span class="number">99999</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">ge</span> <span class="operator">=</span> i%<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">shi</span> <span class="operator">=</span>i/<span class="number">10</span> %<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">bai</span> <span class="operator">=</span>i/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">qian</span> <span class="operator">=</span> i/<span class="number">1000</span>%<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">wan</span> <span class="operator">=</span> i/<span class="number">10000</span>%<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span>Math.pow(ge,<span class="number">5</span>)+Math.pow(shi,<span class="number">5</span>)+Math.pow(bai,<span class="number">5</span>)+Math.pow(qian,<span class="number">5</span>)+Math.pow(wan,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (sum == i)&#123;</span><br><span class="line">                System.out.println(i);</span><br><span class="line">                count3++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(count3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-System"><a href="#2-System" class="headerlink" title="2.System"></a>2.System</h2><p>工具类</p><p>时间原点：1970.1.1.0点</p><p>1s &#x3D;1000ms</p><img src="/2025/03/24/JavaSE/image-20250219205626612.png" class="" title="image-20250219205626612"><p>System.arraycopy（arr1，0，arr2，4，3）</p><p><strong>参数一：数据源，要拷贝的数据从哪个数组而来<br>参数二：从数据源数组中的第几个索引开始拷贝<br>参数三：目的地，我要把数据拷贝到哪个数组中<br>参数四：目的地数组的索引。<br>参数五：拷贝的个数</strong></p><p>注意：</p><p>1.数据源数组和目的地数组都是基本数据类型，那么两者的类型必须保持一致，否则会报错。</p><p>2.在拷贝的时候需要考虑数组的长度，超出范围也会报错。</p><p>3.如果数据源数组和目的地数组都是引用数据类型，那么子类类型可以赋值给父类类型。</p><h2 id="3-Runtime"><a href="#3-Runtime" class="headerlink" title="3.Runtime"></a>3.Runtime</h2><img src="/2025/03/24/JavaSE/image-20250219224656571.png" class="" title="image-20250219224656571"><h2 id="4-Object"><a href="#4-Object" class="headerlink" title="4.Object"></a>4.Object</h2><img src="/2025/03/24/JavaSE/image-20250301142716334.png" class="" title="image-20250301142716334"><p>注意equals方法：</p><img src="/2025/03/24/JavaSE/image-20250301150624191.png" class="" title="image-20250301150624191"><h3 id="4-1-对象克隆"><a href="#4-1-对象克隆" class="headerlink" title="4.1 对象克隆"></a>4.1 对象克隆</h3><img src="/2025/03/24/JavaSE/image-20250301151016470.png" class="" title="image-20250301151016470"><img src="/2025/03/24/JavaSE/image-20250301201049895.png" class="" title="image-20250301201049895"><img src="/2025/03/24/JavaSE/image-20250301201424732.png" class="" title="image-20250301201424732"><img src="/2025/03/24/JavaSE/image-20250301201542555.png" class="" title="image-20250301201542555"><p><strong>总结</strong></p><ol><li>Object是java中的顶级父类。 所有的类都直接或间接的继承于Object类。</li><li>toString()：一般会重写，打印对象时打印属性</li><li>equals()：比较对象时会重写，比较对象属性值是否相同</li><li>clone()：默认浅克隆。</li></ol><p>如果需要深克隆需要重写方法或者使用第三方工具类。</p><h3 id="4-2-Objects"><a href="#4-2-Objects" class="headerlink" title="4.2 Objects"></a>4.2 Objects</h3><img src="/2025/03/24/JavaSE/image-20250301224628567.png" class="" title="image-20250301224628567"><p>总结</p><ol><li>Objects是一个对象工具类，提供了一些操作对象的方法</li><li>equals(对象1，对象2)：先做非空判断，比较两个对象</li><li>isNull(对象)：判断对象是否为空</li><li>nonNull(对象)：判断对象是否不是空</li></ol><h3 id="4-3-BigInteger"><a href="#4-3-BigInteger" class="headerlink" title="4.3 BigInteger"></a>4.3 BigInteger</h3><p>java中，整数有四种类型：byte，short，int，long。</p><p>在底层占用字节个数：byte1字节，short2，int4，long8。</p><img src="/2025/03/24/JavaSE/image-20250305232434592.png" class="" title="image-20250305232434592"><img src="/2025/03/24/JavaSE/image-20250305234345876.png" class="" title="image-20250305234345876"><p>1.一般数据比较小，用valueof获取。</p><p>2.如果超出long的取值范围，或者不确定用多大数字，用普通构造方法。</p><p>3.对象一旦创建，BigInteger内部记录的值不能发生改变。<br>4.只要进行计算都会产生一个新的BigInteger对象</p><img src="/2025/03/24/JavaSE/image-20250305234709306.png" class="" title="image-20250305234709306"> <img src="/2025/03/24/JavaSE/image-20250306000421856.png" class="" title="image-20250306000421856"><h3 id="4-4-BigDecima-小数的精确计算"><a href="#4-4-BigDecima-小数的精确计算" class="headerlink" title="4.4 BigDecima(小数的精确计算)"></a>4.4 BigDecima(小数的精确计算)</h3><img src="/2025/03/24/JavaSE/image-20250315143132692.png" class="" title="image-20250315143132692"><img src="/2025/03/24/JavaSE/image-20250315164032257.png" class="" title="image-20250315164032257"><p>总结</p><ol><li><p>BigDecimal的作用是什么？</p><ul><li>表示较大的小数和解决小数运算精度失真问题。</li></ul></li><li><p>BigDecimal的对象如何获取？</p><ul><li>BigDecimal bd1 &#x3D; new BigDecimal(“较大的小数”);</li><li>BigDecimal bd2 &#x3D; BigDecimal.valueOf(0.1);</li></ul></li><li><p>常见操作<br>加：add<br>减：subtract<br>乘：multiply<br>除：divide（四舍五入：RoundingMode.HALF_UP）</p></li></ol><h2 id="5-正则表达式（Pattern）"><a href="#5-正则表达式（Pattern）" class="headerlink" title="5.正则表达式（Pattern）"></a>5.正则表达式（Pattern）</h2><p>作用一：校验字符串是否满足规则</p><p>作用二：在一段文本中查找满足要求的内容</p><img src="/2025/03/24/JavaSE/image-20250315204453826.png" class="" title="image-20250315204453826"><img src="/2025/03/24/JavaSE/image-20250316132204393.png" class="" title="image-20250316132204393"><img src="/2025/03/24/JavaSE/image-20250316132412539.png" class="" title="image-20250316132412539"><h2 id="6-爬虫"><a href="#6-爬虫" class="headerlink" title="6.爬虫"></a>6.爬虫</h2><p>爬对象的基础固定方式如下：</p><img src="/2025/03/24/JavaSE/image-20250316162909096.png" class="" title="image-20250316162909096"><p>Java当中默认的是贪婪爬取，但是在+或者*后面加上问号，此时就是非贪婪爬取。</p><img src="/2025/03/24/JavaSE/image-20250316173424750.png" class="" title="image-20250316173424750"><img src="/2025/03/24/JavaSE/image-20250316210019404.png" class="" title="image-20250316210019404"><img src="/2025/03/24/JavaSE/image-20250316231316320.png" class="" title="image-20250316231316320"><p>这张图片是一个关于正则表达式中分组的总结。具体内容如下：</p><ol><li><p><strong>正则表达式中的分组有两种：</strong></p><ul><li>捕获分组</li><li>非捕获分组</li></ul></li><li><p><strong>捕获分组（默认）：</strong></p><ul><li>可以获取每组中的内容并反复使用。</li></ul></li><li><p><strong>组号的特点：</strong></p><ul><li>从1开始，连续不间断。</li><li>以左括号为基准，最左边的是第一组。</li></ul></li><li><p><strong>非捕获分组：</strong></p><ul><li>分组之后不需要再用本组数据，仅仅把数据括起来，不占组号。</li><li>（？：）获取所有，（？&#x3D;）获取的时候，只要前面部分，（？！）排除掉后面的</li></ul></li></ol><p>这些信息对于理解和使用正则表达式中的分组功能非常有帮助。</p><h2 id="7-包装类"><a href="#7-包装类" class="headerlink" title="7.包装类"></a>7.包装类</h2><img src="/2025/03/24/JavaSE/image-20250317235803155.png" class="" title="image-20250317235803155"><img src="/2025/03/24/JavaSE/image-20250318000708629.png" class="" title="image-20250318000708629"><h2 id="8-练习"><a href="#8-练习" class="headerlink" title="8.练习"></a>8.练习</h2><img src="/2025/03/24/JavaSE/image-20250318235026307.png" class="" title="image-20250318235026307"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">program2</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//字符串中只能是数字不能有其他字符</span></span><br><span class="line">        <span class="comment">//最少一位，最多十位</span></span><br><span class="line">        <span class="comment">//0不能开头</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.定义一个字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;123a&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.校验字符串</span></span><br><span class="line">        <span class="keyword">if</span>(!str.matches(<span class="string">&quot;[1-9]\\d&#123;0,9&#125;&quot;</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;格式错误&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;格式正确&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="comment">//遍历字符串</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span>str.charAt(i) - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            num = num*<span class="number">10</span>+a;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(num);</span><br><span class="line">        System.out.println(num+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2025/03/24/JavaSE/581d2947d29b2317d44c8d17d985b629_720.png" class="" title="img"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Regexdemo3</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">            <span class="comment">/*定义一个方法实现toBinaryString方法效果，即将十进制数转成二进制数 */</span></span><br><span class="line">            System.out.println(toBinaryString(<span class="number">123</span>));</span><br><span class="line">            System.out.println(Integer.toBinaryString(<span class="number">123</span>));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">toBinaryString</span><span class="params">(<span class="type">int</span> number)</span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//不断除以2 ，得到余数，一直到商为0就结束</span></span><br><span class="line"></span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//利用循环不断的除以2获取余数</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (number==<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//要先获取余数再除以2</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">remaindar</span> <span class="operator">=</span>number % <span class="number">2</span>;</span><br><span class="line">                <span class="comment">//倒着拼接</span></span><br><span class="line">                sb.insert(<span class="number">0</span>,remaindar);</span><br><span class="line">                <span class="comment">//除以2</span></span><br><span class="line">                number =number/<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> sb.toString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><img src="/2025/03/24/JavaSE/image-20250319234858222.png" class="" title="image-20250319234858222"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.temporal.ChronoUnit;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">regexdemo4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ParseException &#123;</span><br><span class="line">        <span class="comment">//JDK7</span></span><br><span class="line">        <span class="comment">/*1.计算出生年月日的毫秒值*/</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">birthday</span> <span class="operator">=</span> <span class="string">&quot;2000年1月1日&quot;</span>;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yy年y月y日&quot;</span>);</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span>sdf.parse(birthday);</span><br><span class="line">        <span class="type">long</span> <span class="variable">birthtime</span> <span class="operator">=</span> date.getTime();</span><br><span class="line">        <span class="type">long</span> <span class="variable">todaytime</span> <span class="operator">=</span>System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">time</span> <span class="operator">=</span> todaytime - birthtime;</span><br><span class="line">        System.out.println(time);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//JDK8</span></span><br><span class="line"></span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">ld1</span> <span class="operator">=</span> LocalDate.of(<span class="number">2000</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">ld2</span> <span class="operator">=</span>LocalDate.now();</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">days</span> <span class="operator">=</span> ChronoUnit.DAYS.between(ld1,ld2);</span><br><span class="line"></span><br><span class="line">        System.out.println(days);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> JAVASE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/03/24/API/"/>
      <url>/2025/03/24/API/</url>
      
        <content type="html"><![CDATA[<p>title: API<br>date: 2025-3-24 20:23:44<br>tags:</p><ul><li>Hexo<br>categories: Hexo</li></ul><h1 id="常见API"><a href="#常见API" class="headerlink" title="常见API"></a>常见API</h1><h2 id="1-Math"><a href="#1-Math" class="headerlink" title="1.Math"></a>1.Math</h2><p>注意：方法都是静态的。</p><p><img src="/API.assets/image-20250218224144107.png" alt="image-20250218224144107"></p><p>​      sqrt  返回a的平方根</p><p>​      cbrt 返回a的立方根</p><p>练习一：判断一个数是否为一个质数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Math1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(isPrime(<span class="number">997</span>));</span><br><span class="line">        <span class="comment">//判断一个数是否为质数</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isPrime</span><span class="params">(<span class="type">int</span> number)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt; Math.sqrt(number); i++) &#123;</span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">if</span> (number % i == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(count);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>练习二</p><p><img src="/API.assets/image-20250218232919677.png" alt="image-20250218232919677"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Math2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//要求1:统计水仙花数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="comment">//三位数100-999</span></span><br><span class="line">        <span class="comment">//845</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">100</span>; i &lt;= <span class="number">999</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">ge</span> <span class="operator">=</span> i%<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">shi</span> <span class="operator">=</span>i/<span class="number">10</span> %<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">bai</span> <span class="operator">=</span>i/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">            <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span>Math.pow(ge,<span class="number">3</span>)+Math.pow(shi,<span class="number">3</span>)+Math.pow(bai,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (sum == i)&#123;</span><br><span class="line"><span class="comment">//                System.out.println(i);</span></span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(count);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">count1</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="comment">//要求2：证明没有两位的自幂数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>; i &lt;= <span class="number">99</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">ge</span> <span class="operator">=</span> i%<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">shi</span> <span class="operator">=</span>i/<span class="number">10</span> %<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">            <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span>Math.pow(ge,<span class="number">2</span>)+Math.pow(shi,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (sum == i)&#123;</span><br><span class="line"><span class="comment">//                System.out.println(i);</span></span><br><span class="line">                count1++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(count1);</span><br><span class="line">        <span class="type">int</span> <span class="variable">count2</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="comment">//要求3：四叶玫瑰数和五角星数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1000</span>; i &lt;= <span class="number">9999</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">ge</span> <span class="operator">=</span> i%<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">shi</span> <span class="operator">=</span>i/<span class="number">10</span> %<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">bai</span> <span class="operator">=</span>i/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">qian</span> <span class="operator">=</span> i/<span class="number">1000</span>%<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span>Math.pow(ge,<span class="number">4</span>)+Math.pow(shi,<span class="number">4</span>)+Math.pow(bai,<span class="number">4</span>)+Math.pow(qian,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (sum == i)&#123;</span><br><span class="line">                System.out.println(i);</span><br><span class="line">                count2++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(count2);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">count3</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="comment">//要求3：四叶玫瑰数和五角星数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10000</span>; i &lt;= <span class="number">99999</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">ge</span> <span class="operator">=</span> i%<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">shi</span> <span class="operator">=</span>i/<span class="number">10</span> %<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">bai</span> <span class="operator">=</span>i/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">qian</span> <span class="operator">=</span> i/<span class="number">1000</span>%<span class="number">10</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">wan</span> <span class="operator">=</span> i/<span class="number">10000</span>%<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span>Math.pow(ge,<span class="number">5</span>)+Math.pow(shi,<span class="number">5</span>)+Math.pow(bai,<span class="number">5</span>)+Math.pow(qian,<span class="number">5</span>)+Math.pow(wan,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (sum == i)&#123;</span><br><span class="line">                System.out.println(i);</span><br><span class="line">                count3++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(count3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-System"><a href="#2-System" class="headerlink" title="2.System"></a>2.System</h2><p>工具类</p><p>时间原点：1970.1.1.0点</p><p>1s &#x3D;1000ms</p><p><img src="/API.assets/image-20250219205626612.png" alt="image-20250219205626612"></p><p>System.arraycopy（arr1，0，arr2，4，3）</p><p><strong>参数一：数据源，要拷贝的数据从哪个数组而来<br>参数二：从数据源数组中的第几个索引开始拷贝<br>参数三：目的地，我要把数据拷贝到哪个数组中<br>参数四：目的地数组的索引。<br>参数五：拷贝的个数</strong></p><p>注意：</p><p>1.数据源数组和目的地数组都是基本数据类型，那么两者的类型必须保持一致，否则会报错。</p><p>2.在拷贝的时候需要考虑数组的长度，超出范围也会报错。</p><p>3.如果数据源数组和目的地数组都是引用数据类型，那么子类类型可以赋值给父类类型。</p><h2 id="3-Runtime"><a href="#3-Runtime" class="headerlink" title="3.Runtime"></a>3.Runtime</h2><p><img src="/API.assets/image-20250219224656571.png" alt="image-20250219224656571"></p><h2 id="4-Object"><a href="#4-Object" class="headerlink" title="4.Object"></a>4.Object</h2><p><img src="/API.assets/image-20250301142716334.png" alt="image-20250301142716334"></p><p>注意equals方法：</p><p><img src="/API.assets/image-20250301150624191.png" alt="image-20250301150624191"></p><h3 id="4-1-对象克隆"><a href="#4-1-对象克隆" class="headerlink" title="4.1 对象克隆"></a>4.1 对象克隆</h3><p><img src="/API.assets/image-20250301151016470.png" alt="image-20250301151016470"></p><p><img src="/API.assets/image-20250301201049895.png" alt="image-20250301201049895"></p><p><img src="/API.assets/image-20250301201424732.png" alt="image-20250301201424732"></p><p><img src="/API.assets/image-20250301201542555.png" alt="image-20250301201542555"></p><p><strong>总结</strong></p><ol><li>Object是java中的顶级父类。 所有的类都直接或间接的继承于Object类。</li><li>toString()：一般会重写，打印对象时打印属性</li><li>equals()：比较对象时会重写，比较对象属性值是否相同</li><li>clone()：默认浅克隆。</li></ol><p>如果需要深克隆需要重写方法或者使用第三方工具类。</p><h3 id="4-2-Objects"><a href="#4-2-Objects" class="headerlink" title="4.2 Objects"></a>4.2 Objects</h3><p><img src="/API.assets/image-20250301224628567.png" alt="image-20250301224628567"></p><p>总结</p><ol><li>Objects是一个对象工具类，提供了一些操作对象的方法</li><li>equals(对象1，对象2)：先做非空判断，比较两个对象</li><li>isNull(对象)：判断对象是否为空</li><li>nonNull(对象)：判断对象是否不是空</li></ol><h3 id="4-3-BigInteger"><a href="#4-3-BigInteger" class="headerlink" title="4.3 BigInteger"></a>4.3 BigInteger</h3><p>java中，整数有四种类型：byte，short，int，long。</p><p>在底层占用字节个数：byte1字节，short2，int4，long8。</p><p><img src="/API.assets/image-20250305232434592.png" alt="image-20250305232434592"></p><p><img src="/API.assets/image-20250305234345876.png" alt="image-20250305234345876"></p><p>1.一般数据比较小，用valueof获取。</p><p>2.如果超出long的取值范围，或者不确定用多大数字，用普通构造方法。</p><p>3.对象一旦创建，BigInteger内部记录的值不能发生改变。<br>4.只要进行计算都会产生一个新的BigInteger对象</p><p><img src="/API.assets/image-20250305234709306.png" alt="image-20250305234709306"> </p><p><img src="/API.assets/image-20250306000421856.png" alt="image-20250306000421856"></p><h3 id="4-4-BigDecima-小数的精确计算"><a href="#4-4-BigDecima-小数的精确计算" class="headerlink" title="4.4 BigDecima(小数的精确计算)"></a>4.4 BigDecima(小数的精确计算)</h3><p><img src="/API.assets/image-20250315143132692.png" alt="image-20250315143132692"></p><p><img src="/API.assets/image-20250315164032257.png" alt="image-20250315164032257"></p><p>总结</p><ol><li><p>BigDecimal的作用是什么？</p><ul><li>表示较大的小数和解决小数运算精度失真问题。</li></ul></li><li><p>BigDecimal的对象如何获取？</p><ul><li>BigDecimal bd1 &#x3D; new BigDecimal(“较大的小数”);</li><li>BigDecimal bd2 &#x3D; BigDecimal.valueOf(0.1);</li></ul></li><li><p>常见操作<br>加：add<br>减：subtract<br>乘：multiply<br>除：divide（四舍五入：RoundingMode.HALF_UP）</p></li></ol><h2 id="5-正则表达式（Pattern）"><a href="#5-正则表达式（Pattern）" class="headerlink" title="5.正则表达式（Pattern）"></a>5.正则表达式（Pattern）</h2><p>作用一：校验字符串是否满足规则</p><p>作用二：在一段文本中查找满足要求的内容</p><p><img src="/API.assets/image-20250315204453826.png" alt="image-20250315204453826"></p><p><img src="/API.assets/image-20250316132204393.png" alt="image-20250316132204393"></p><p><img src="/API.assets/image-20250316132412539.png" alt="image-20250316132412539"></p><h2 id="6-爬虫"><a href="#6-爬虫" class="headerlink" title="6.爬虫"></a>6.爬虫</h2><p>爬对象的基础固定方式如下：</p><p><img src="/API.assets/image-20250316162909096.png" alt="image-20250316162909096"></p><p>Java当中默认的是贪婪爬取，但是在+或者*后面加上问号，此时就是非贪婪爬取。</p><p><img src="/API.assets/image-20250316173424750.png" alt="image-20250316173424750"></p><p><img src="/API.assets/image-20250316210019404.png" alt="image-20250316210019404"></p><p><img src="/API.assets/image-20250316231316320.png" alt="image-20250316231316320"></p><p>这张图片是一个关于正则表达式中分组的总结。具体内容如下：</p><ol><li><p><strong>正则表达式中的分组有两种：</strong></p><ul><li>捕获分组</li><li>非捕获分组</li></ul></li><li><p><strong>捕获分组（默认）：</strong></p><ul><li>可以获取每组中的内容并反复使用。</li></ul></li><li><p><strong>组号的特点：</strong></p><ul><li>从1开始，连续不间断。</li><li>以左括号为基准，最左边的是第一组。</li></ul></li><li><p><strong>非捕获分组：</strong></p><ul><li>分组之后不需要再用本组数据，仅仅把数据括起来，不占组号。</li><li>（？：）获取所有，（？&#x3D;）获取的时候，只要前面部分，（？！）排除掉后面的</li></ul></li></ol><p>这些信息对于理解和使用正则表达式中的分组功能非常有帮助。</p><h2 id="7-包装类"><a href="#7-包装类" class="headerlink" title="7.包装类"></a>7.包装类</h2><p><img src="/API.assets/image-20250317235803155.png" alt="image-20250317235803155"></p><p><img src="/API.assets/image-20250318000708629.png" alt="image-20250318000708629"></p><h2 id="8-练习"><a href="#8-练习" class="headerlink" title="8.练习"></a>8.练习</h2><p><img src="/API.assets/image-20250318235026307.png" alt="image-20250318235026307"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">program2</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//字符串中只能是数字不能有其他字符</span></span><br><span class="line">        <span class="comment">//最少一位，最多十位</span></span><br><span class="line">        <span class="comment">//0不能开头</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.定义一个字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;123a&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.校验字符串</span></span><br><span class="line">        <span class="keyword">if</span>(!str.matches(<span class="string">&quot;[1-9]\\d&#123;0,9&#125;&quot;</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;格式错误&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;格式正确&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="comment">//遍历字符串</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span>str.charAt(i) - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            num = num*<span class="number">10</span>+a;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(num);</span><br><span class="line">        System.out.println(num+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/API.assets/581d2947d29b2317d44c8d17d985b629_720.png" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Regexdemo3</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">            <span class="comment">/*定义一个方法实现toBinaryString方法效果，即将十进制数转成二进制数 */</span></span><br><span class="line">            System.out.println(toBinaryString(<span class="number">123</span>));</span><br><span class="line">            System.out.println(Integer.toBinaryString(<span class="number">123</span>));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">toBinaryString</span><span class="params">(<span class="type">int</span> number)</span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//不断除以2 ，得到余数，一直到商为0就结束</span></span><br><span class="line"></span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//利用循环不断的除以2获取余数</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (number==<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//要先获取余数再除以2</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">remaindar</span> <span class="operator">=</span>number % <span class="number">2</span>;</span><br><span class="line">                <span class="comment">//倒着拼接</span></span><br><span class="line">                sb.insert(<span class="number">0</span>,remaindar);</span><br><span class="line">                <span class="comment">//除以2</span></span><br><span class="line">                number =number/<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> sb.toString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="/API.assets/image-20250319234858222.png" alt="image-20250319234858222"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.temporal.ChronoUnit;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">regexdemo4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ParseException &#123;</span><br><span class="line">        <span class="comment">//JDK7</span></span><br><span class="line">        <span class="comment">/*1.计算出生年月日的毫秒值*/</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">birthday</span> <span class="operator">=</span> <span class="string">&quot;2000年1月1日&quot;</span>;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yy年y月y日&quot;</span>);</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span>sdf.parse(birthday);</span><br><span class="line">        <span class="type">long</span> <span class="variable">birthtime</span> <span class="operator">=</span> date.getTime();</span><br><span class="line">        <span class="type">long</span> <span class="variable">todaytime</span> <span class="operator">=</span>System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">time</span> <span class="operator">=</span> todaytime - birthtime;</span><br><span class="line">        System.out.println(time);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//JDK8</span></span><br><span class="line"></span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">ld1</span> <span class="operator">=</span> LocalDate.of(<span class="number">2000</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">ld2</span> <span class="operator">=</span>LocalDate.now();</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">days</span> <span class="operator">=</span> ChronoUnit.DAYS.between(ld1,ld2);</span><br><span class="line"></span><br><span class="line">        System.out.println(days);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/03/20/hello-world/"/>
      <url>/2025/03/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
